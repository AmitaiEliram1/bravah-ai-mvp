generator client {
  provider = "prisma-client-js"
  previewFeatures = ["driverAdapters"]
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(cuid())
  name      String
  email     String   @unique
  language  String   @default("en")
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  
  suppliers Supplier[]
  tenders   Tender[]
}

model Supplier {
  id          String   @id @default(cuid())
  name        String
  whatsapp    String
  email       String
  userId      String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  
  user        User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  invitations TenderInvitation[]
  bids        Bid[]
}

model Tender {
  id               String   @id @default(cuid())
  productName      String
  units            Int
  paymentCondition String
  durationHours    Int
  status           String   @default("draft") // draft, active, expired, closed, awarded
  expiresAt        DateTime
  images           String?  // JSON array of image URLs
  preferences      String?  // JSON object with delivery, warranty, quality priorities
  winningBidId     String?  // ID of the winning bid
  userId           String
  createdAt        DateTime @default(now())
  updatedAt        DateTime @updatedAt
  
  user         User               @relation(fields: [userId], references: [id], onDelete: Cascade)
  invitations  TenderInvitation[]
  bids         Bid[]
}

model TenderInvitation {
  id         String   @id @default(cuid())
  tenderId   String
  supplierId String
  inviteLink String   @unique
  status     String   @default("pending") // pending, viewed, participated
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  
  tender   Tender   @relation(fields: [tenderId], references: [id], onDelete: Cascade)
  supplier Supplier @relation(fields: [supplierId], references: [id], onDelete: Cascade)
  
  @@unique([tenderId, supplierId])
}

model Bid {
  id               String   @id @default(cuid())
  tenderId         String
  supplierId       String
  price            Float
  paymentCondition String
  units            Int
  notes            String?
  deliveryDays     Int?     // How many days for delivery
  warrantyMonths   Int?     // Warranty duration in months
  qualityScore     Int?     // Self-reported quality rating (1-5)
  createdAt        DateTime @default(now())
  updatedAt        DateTime @updatedAt
  
  tender   Tender   @relation(fields: [tenderId], references: [id], onDelete: Cascade)
  supplier Supplier @relation(fields: [supplierId], references: [id], onDelete: Cascade)
}
